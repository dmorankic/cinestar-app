// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dataBase;

namespace dataBase.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211115133120_damirIncijalno")]
    partial class damirIncijalno
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modeli.DetaljiFilma", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("datumObjave")
                        .HasColumnType("datetime2");

                    b.Property<string>("trailer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trailerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trajanje")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("detaljiFilma");
                });

            modelBuilder.Entity("Modeli.Film", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("detaljiFilmaID")
                        .HasColumnType("int");

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("zanr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("detaljiFilmaID");

                    b.ToTable("filmovi");
                });

            modelBuilder.Entity("Modeli.Glumac", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("datumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("glumci");
                });

            modelBuilder.Entity("Modeli.GlumacFilm", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("filmId")
                        .HasColumnType("int");

                    b.Property<int>("glumacId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("glumacFilm");
                });

            modelBuilder.Entity("Modeli.Klijent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("imePrezime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("korisnickoIme")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("lozinka")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("klijenti");
                });

            modelBuilder.Entity("Modeli.Projekcija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("vrijemePrikazivanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("vrstaProjekcijeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("vrstaProjekcijeId");

                    b.ToTable("projekcije");
                });

            modelBuilder.Entity("Modeli.Radnik", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("imePrezime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("korisnickoIme")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("lozinka")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("radnici");
                });

            modelBuilder.Entity("Modeli.VrstaProjekcije", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dimenzija")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("vrstaProjekcije");
                });

            modelBuilder.Entity("Modeli.Film", b =>
                {
                    b.HasOne("Modeli.DetaljiFilma", "detaljiFilma")
                        .WithMany()
                        .HasForeignKey("detaljiFilmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("detaljiFilma");
                });

            modelBuilder.Entity("Modeli.Projekcija", b =>
                {
                    b.HasOne("Modeli.VrstaProjekcije", "vrstaProjekcije")
                        .WithMany()
                        .HasForeignKey("vrstaProjekcijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vrstaProjekcije");
                });
#pragma warning restore 612, 618
        }
    }
}
